// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_3x3_strm_HH_
#define _conv_3x3_strm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_3x3_strm_linbkb.h"

namespace ap_rtl {

struct conv_3x3_strm : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > out_stream_V_din;
    sc_in< sc_logic > out_stream_V_full_n;
    sc_out< sc_logic > out_stream_V_write;
    sc_in< sc_lv<8> > in_stream_V_dout;
    sc_in< sc_logic > in_stream_V_empty_n;
    sc_out< sc_logic > in_stream_V_read;


    // Module declarations
    conv_3x3_strm(sc_module_name name);
    SC_HAS_PROCESS(conv_3x3_strm);

    ~conv_3x3_strm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_3x3_strm_linbkb* line_buf_0_U;
    conv_3x3_strm_linbkb* line_buf_1_U;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > out_stream_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter4;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_998;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter3_exitcond_flatten_reg_998;
    sc_signal< sc_logic > in_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond1_reg_884;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > exitcond2_reg_893;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_lv<1> > icmp1_reg_1078;
    sc_signal< sc_lv<9> > x_reg_252;
    sc_signal< sc_lv<9> > x1_reg_264;
    sc_signal< sc_lv<17> > indvar_flatten_reg_276;
    sc_signal< sc_lv<9> > y_assign_reg_287;
    sc_signal< sc_lv<9> > x_assign_reg_299;
    sc_signal< sc_lv<1> > exitcond1_fu_310_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > x_1_fu_316_p2;
    sc_signal< sc_lv<9> > x_1_reg_888;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond2_fu_327_p2;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<9> > x_2_fu_333_p2;
    sc_signal< sc_lv<9> > x_2_reg_897;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > rev_fu_389_p2;
    sc_signal< sc_lv<1> > rev_reg_987;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< bool > ap_block_state9_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp2_stage0_iter2;
    sc_signal< bool > ap_block_state12_pp2_stage0_iter3;
    sc_signal< bool > ap_block_state13_pp2_stage0_iter4;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<1> > rev1_fu_409_p2;
    sc_signal< sc_lv<1> > rev1_reg_992;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_415_p2;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter1_exitcond_flatten_reg_998;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter2_exitcond_flatten_reg_998;
    sc_signal< sc_lv<17> > indvar_flatten_next_fu_421_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<1> > exitcond_fu_427_p2;
    sc_signal< sc_lv<1> > exitcond_reg_1007;
    sc_signal< sc_lv<1> > tmp_i_mid2_fu_447_p3;
    sc_signal< sc_lv<1> > tmp_i_mid2_reg_1013;
    sc_signal< sc_lv<9> > y_assign_mid2_fu_455_p3;
    sc_signal< sc_lv<9> > y_assign_mid2_reg_1018;
    sc_signal< sc_lv<1> > tmp_1_i_fu_463_p2;
    sc_signal< sc_lv<1> > tmp_1_i_reg_1023;
    sc_signal< sc_lv<9> > j_fu_469_p2;
    sc_signal< sc_lv<9> > j_reg_1028;
    sc_signal< sc_lv<1> > brmerge_demorgan_i_0_1_fu_495_p2;
    sc_signal< sc_lv<1> > brmerge_demorgan_i_0_1_reg_1033;
    sc_signal< sc_lv<1> > brmerge_demorgan_i_0_2_fu_521_p2;
    sc_signal< sc_lv<1> > brmerge_demorgan_i_0_2_reg_1038;
    sc_signal< sc_lv<8> > line_buf_0_addr_3_reg_1044;
    sc_signal< sc_lv<8> > line_buf_1_addr_3_reg_1050;
    sc_signal< sc_lv<8> > ap_reg_pp2_iter1_line_buf_1_addr_3_reg_1050;
    sc_signal< sc_lv<8> > window_1_1_1_load_reg_1056;
    sc_signal< sc_lv<1> > brmerge_demorgan_i_1_fu_629_p2;
    sc_signal< sc_lv<1> > brmerge_demorgan_i_1_reg_1061;
    sc_signal< sc_lv<11> > result_1_fu_646_p2;
    sc_signal< sc_lv<11> > result_1_reg_1067;
    sc_signal< sc_lv<1> > brmerge_demorgan_i_2_fu_652_p2;
    sc_signal< sc_lv<1> > brmerge_demorgan_i_2_reg_1072;
    sc_signal< sc_lv<1> > ap_reg_pp2_iter2_brmerge_demorgan_i_2_reg_1072;
    sc_signal< sc_lv<1> > icmp1_fu_668_p2;
    sc_signal< sc_lv<11> > result_2_2_fu_778_p2;
    sc_signal< sc_lv<11> > result_2_2_reg_1082;
    sc_signal< sc_lv<8> > tmp_14_fu_848_p3;
    sc_signal< sc_lv<8> > tmp_14_reg_1087;
    sc_signal< sc_lv<1> > icmp_fu_866_p2;
    sc_signal< sc_lv<1> > icmp_reg_1093;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state9;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter3;
    sc_signal< sc_lv<8> > line_buf_0_address0;
    sc_signal< sc_logic > line_buf_0_ce0;
    sc_signal< sc_logic > line_buf_0_we0;
    sc_signal< sc_lv<8> > line_buf_0_d0;
    sc_signal< sc_lv<8> > line_buf_0_q0;
    sc_signal< sc_lv<8> > line_buf_0_address1;
    sc_signal< sc_logic > line_buf_0_ce1;
    sc_signal< sc_lv<8> > line_buf_0_q1;
    sc_signal< sc_lv<8> > line_buf_1_address0;
    sc_signal< sc_logic > line_buf_1_ce0;
    sc_signal< sc_logic > line_buf_1_we0;
    sc_signal< sc_lv<8> > line_buf_1_q0;
    sc_signal< sc_lv<8> > line_buf_1_address1;
    sc_signal< sc_logic > line_buf_1_ce1;
    sc_signal< sc_lv<8> > line_buf_1_q1;
    sc_signal< sc_lv<9> > ap_phi_mux_x_phi_fu_256_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_x1_phi_fu_268_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_y_assign_phi_fu_291_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_x_assign_phi_fu_303_p4;
    sc_signal< sc_lv<64> > tmp_1_fu_322_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_339_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_527_p1;
    sc_signal< bool > ap_block_pp2_stage0_01001;
    sc_signal< sc_lv<32> > read_count_1_fu_122;
    sc_signal< sc_lv<32> > read_count_fu_680_p2;
    sc_signal< sc_lv<8> > window_0_1_fu_126;
    sc_signal< sc_lv<8> > window_0_0_fu_130;
    sc_signal< sc_lv<8> > window_0_0_1_fu_134;
    sc_signal< sc_lv<8> > window_1_1_1_fu_138;
    sc_signal< sc_lv<8> > window_1_0_fu_142;
    sc_signal< sc_lv<8> > window_1_0_1_fu_146;
    sc_signal< sc_lv<8> > window_2_1_1_fu_150;
    sc_signal< sc_lv<8> > window_2_0_fu_154;
    sc_signal< sc_lv<8> > window_2_0_1_fu_158;
    sc_signal< sc_lv<9> > i_fu_375_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_381_p3;
    sc_signal< sc_lv<9> > y_assign_2_fu_395_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_401_p3;
    sc_signal< sc_lv<1> > tmp_i_mid1_fu_441_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_369_p2;
    sc_signal< sc_lv<9> > x_assign_mid2_fu_433_p3;
    sc_signal< sc_lv<1> > tmp_16_fu_475_p3;
    sc_signal< sc_lv<1> > rev3_fu_483_p2;
    sc_signal< sc_lv<1> > tmp1_fu_489_p2;
    sc_signal< sc_lv<9> > x_assign_2_fu_501_p2;
    sc_signal< sc_lv<1> > tmp_17_fu_507_p3;
    sc_signal< sc_lv<1> > rev4_fu_515_p2;
    sc_signal< sc_lv<9> > y_assign_2_mid1_fu_553_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_559_p3;
    sc_signal< sc_lv<1> > rev2_fu_567_p2;
    sc_signal< sc_lv<9> > tmp_151_cast_fu_583_p1;
    sc_signal< sc_lv<1> > or_cond1_i_fu_579_p2;
    sc_signal< sc_lv<9> > tmp_8_fu_587_p2;
    sc_signal< sc_lv<9> > result_2_i_fu_593_p3;
    sc_signal< sc_lv<9> > tmp_15_0_2_cast_fu_608_p1;
    sc_signal< sc_lv<9> > result_2_i_0_0_s_fu_601_p3;
    sc_signal< sc_lv<9> > result_0_2_fu_612_p2;
    sc_signal< sc_lv<9> > result_2_i_0_2_fu_618_p3;
    sc_signal< sc_lv<1> > tmp_i1_mid2_fu_548_p3;
    sc_signal< sc_lv<9> > p_shl_fu_634_p3;
    sc_signal< sc_lv<11> > result_2_i_0_2_cast_fu_625_p1;
    sc_signal< sc_lv<11> > p_shl_cast_fu_642_p1;
    sc_signal< sc_lv<1> > tmp_i2_mid2_fu_573_p3;
    sc_signal< sc_lv<16> > tmp_21_fu_658_p4;
    sc_signal< sc_lv<9> > tmp_16_1_2_fu_733_p3;
    sc_signal< sc_lv<11> > tmp_16_1_2_cast_fu_740_p1;
    sc_signal< sc_lv<11> > result_2_i_1_0_s_fu_727_p3;
    sc_signal< sc_lv<11> > result_1_2_fu_744_p2;
    sc_signal< sc_lv<11> > result_2_i_1_2_fu_750_p3;
    sc_signal< sc_lv<11> > tmp_15_2_cast_fu_757_p1;
    sc_signal< sc_lv<11> > result_2_fu_761_p2;
    sc_signal< sc_lv<11> > tmp_15_2_2_cast_fu_774_p1;
    sc_signal< sc_lv<11> > result_2_i_2_0_s_fu_767_p3;
    sc_signal< sc_lv<11> > result_2_i_2_2_fu_802_p3;
    sc_signal< sc_lv<11> > p_neg_fu_816_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_822_p4;
    sc_signal< sc_lv<1> > tmp_18_fu_808_p3;
    sc_signal< sc_lv<8> > tmp_12_fu_832_p2;
    sc_signal< sc_lv<8> > tmp_13_fu_838_p4;
    sc_signal< sc_lv<9> > tmp_19_fu_856_p4;
    sc_signal< sc_lv<8> > tmp_15_fu_872_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_pp1_stage0;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<8> ap_ST_fsm_pp2_stage0;
    static const sc_lv<8> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<9> ap_const_lv9_FE;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<64> ap_const_lv64_FE;
    static const sc_lv<64> ap_const_lv64_FF;
    static const sc_lv<32> ap_const_lv32_102;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<9> ap_const_lv9_2;
    static const sc_lv<17> ap_const_lv17_10000;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<9> ap_const_lv9_3;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_7;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_01001();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_state10_pp2_stage0_iter1();
    void thread_ap_block_state11_pp2_stage0_iter2();
    void thread_ap_block_state12_pp2_stage0_iter3();
    void thread_ap_block_state13_pp2_stage0_iter4();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_block_state9_pp2_stage0_iter0();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_condition_pp2_exit_iter0_state9();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_phi_mux_x1_phi_fu_268_p4();
    void thread_ap_phi_mux_x_assign_phi_fu_303_p4();
    void thread_ap_phi_mux_x_phi_fu_256_p4();
    void thread_ap_phi_mux_y_assign_phi_fu_291_p4();
    void thread_ap_ready();
    void thread_brmerge_demorgan_i_0_1_fu_495_p2();
    void thread_brmerge_demorgan_i_0_2_fu_521_p2();
    void thread_brmerge_demorgan_i_1_fu_629_p2();
    void thread_brmerge_demorgan_i_2_fu_652_p2();
    void thread_exitcond1_fu_310_p2();
    void thread_exitcond2_fu_327_p2();
    void thread_exitcond_flatten_fu_415_p2();
    void thread_exitcond_fu_427_p2();
    void thread_i_fu_375_p2();
    void thread_icmp1_fu_668_p2();
    void thread_icmp_fu_866_p2();
    void thread_in_stream_V_blk_n();
    void thread_in_stream_V_read();
    void thread_indvar_flatten_next_fu_421_p2();
    void thread_j_fu_469_p2();
    void thread_line_buf_0_address0();
    void thread_line_buf_0_address1();
    void thread_line_buf_0_ce0();
    void thread_line_buf_0_ce1();
    void thread_line_buf_0_d0();
    void thread_line_buf_0_we0();
    void thread_line_buf_1_address0();
    void thread_line_buf_1_address1();
    void thread_line_buf_1_ce0();
    void thread_line_buf_1_ce1();
    void thread_line_buf_1_we0();
    void thread_or_cond1_i_fu_579_p2();
    void thread_out_stream_V_blk_n();
    void thread_out_stream_V_din();
    void thread_out_stream_V_write();
    void thread_p_neg_fu_816_p2();
    void thread_p_shl_cast_fu_642_p1();
    void thread_p_shl_fu_634_p3();
    void thread_read_count_fu_680_p2();
    void thread_result_0_2_fu_612_p2();
    void thread_result_1_2_fu_744_p2();
    void thread_result_1_fu_646_p2();
    void thread_result_2_2_fu_778_p2();
    void thread_result_2_fu_761_p2();
    void thread_result_2_i_0_0_s_fu_601_p3();
    void thread_result_2_i_0_2_cast_fu_625_p1();
    void thread_result_2_i_0_2_fu_618_p3();
    void thread_result_2_i_1_0_s_fu_727_p3();
    void thread_result_2_i_1_2_fu_750_p3();
    void thread_result_2_i_2_0_s_fu_767_p3();
    void thread_result_2_i_2_2_fu_802_p3();
    void thread_result_2_i_fu_593_p3();
    void thread_rev1_fu_409_p2();
    void thread_rev2_fu_567_p2();
    void thread_rev3_fu_483_p2();
    void thread_rev4_fu_515_p2();
    void thread_rev_fu_389_p2();
    void thread_tmp1_fu_489_p2();
    void thread_tmp_10_fu_559_p3();
    void thread_tmp_11_fu_822_p4();
    void thread_tmp_12_fu_832_p2();
    void thread_tmp_13_fu_838_p4();
    void thread_tmp_14_fu_848_p3();
    void thread_tmp_151_cast_fu_583_p1();
    void thread_tmp_15_0_2_cast_fu_608_p1();
    void thread_tmp_15_2_2_cast_fu_774_p1();
    void thread_tmp_15_2_cast_fu_757_p1();
    void thread_tmp_15_fu_872_p2();
    void thread_tmp_16_1_2_cast_fu_740_p1();
    void thread_tmp_16_1_2_fu_733_p3();
    void thread_tmp_16_fu_475_p3();
    void thread_tmp_17_fu_507_p3();
    void thread_tmp_18_fu_808_p3();
    void thread_tmp_19_fu_856_p4();
    void thread_tmp_1_fu_322_p1();
    void thread_tmp_1_i_fu_463_p2();
    void thread_tmp_21_fu_658_p4();
    void thread_tmp_3_fu_381_p3();
    void thread_tmp_4_fu_339_p1();
    void thread_tmp_6_fu_401_p3();
    void thread_tmp_8_fu_587_p2();
    void thread_tmp_i1_mid2_fu_548_p3();
    void thread_tmp_i2_mid2_fu_573_p3();
    void thread_tmp_i_fu_369_p2();
    void thread_tmp_i_mid1_fu_441_p2();
    void thread_tmp_i_mid2_fu_447_p3();
    void thread_tmp_s_fu_527_p1();
    void thread_x_1_fu_316_p2();
    void thread_x_2_fu_333_p2();
    void thread_x_assign_2_fu_501_p2();
    void thread_x_assign_mid2_fu_433_p3();
    void thread_y_assign_2_fu_395_p2();
    void thread_y_assign_2_mid1_fu_553_p2();
    void thread_y_assign_mid2_fu_455_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
